{
  "stats": {
    "suites": 2,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2022-10-26T11:41:47.406Z",
    "end": "2022-10-26T11:41:49.257Z",
    "duration": 1851,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a77dff21-34ee-434c-b48e-1caeda3de024",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4e74354b-5861-4d6b-a31e-374ff098e921",
          "title": "Jojonomic API Automation Skill Test Wheater",
          "fullFile": "D:\\Refactory\\Jojonomic\\apiautomation-skill-test\\tests\\scenarios\\wheater.test.js",
          "file": "\\tests\\scenarios\\wheater.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to get current wheater data based on Lat and Lon",
              "fullTitle": "Jojonomic API Automation Skill Test Wheater Should be able to get current wheater data based on Lat and Lon",
              "timedOut": false,
              "duration": 1078,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await WheaterbitAPI.get_current_wheater(data.VALID_PARAMS);\nlet jsonData = response.data\nconsole.log(jsonData.data[0].state_code)\nassert.equal(response.status, 200);\nassert.containsAllKeys(response.data, ['count', 'data'])\nassert.equal(jsonData.data[0].state_code, 'NY')",
              "err": {},
              "uuid": "5dc72a39-d570-4528-8715-4377ebcc62ca",
              "parentUUID": "4e74354b-5861-4d6b-a31e-374ff098e921",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5dc72a39-d570-4528-8715-4377ebcc62ca"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1078,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5063f755-11f6-43c7-9d58-3e08f3da7100",
          "title": "Jojonomic API Automation Skill Test Forecast",
          "fullFile": "D:\\Refactory\\Jojonomic\\apiautomation-skill-test\\tests\\scenarios\\wheater.test.js",
          "file": "\\tests\\scenarios\\wheater.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to get current forecast based on postal code and hours",
              "fullTitle": "Jojonomic API Automation Skill Test Forecast Should be able to get current forecast based on postal code and hours",
              "timedOut": false,
              "duration": 770,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await WheaterbitAPI.get_forecast_wheater(data.VALID_PARAMS_FORECAST);\nlet jsonData = response.data\n// console.log(jsonData.data[0].timestamp_utc);\n// console.log(jsonData.data[0].weather);\nassert.equal(response.status, 200);\nassert.equal(jsonData.data[0].timestamp_utc, '2022-10-26T12:00:00')\nassert.equal(jsonData.data[0].weather.code, 804)\nassert.equal(jsonData.data[0].weather.icon, 'c04d')\nassert.equal(jsonData.data[0].weather.description, 'Overcast clouds')",
              "err": {},
              "uuid": "04854745-9202-4654-b534-844e8ae78699",
              "parentUUID": "5063f755-11f6-43c7-9d58-3e08f3da7100",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "04854745-9202-4654-b534-844e8ae78699"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 770,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.1.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports"
      },
      "version": "6.2.0"
    }
  }
}